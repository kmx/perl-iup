# BEWARE: this is a generated file, DO NOT EDIT THIS FILE MANUALLY!!!

package IUP::Internal::Callback;

use strict;
use warnings;

use IUP::Internal::LibraryIup; #loads also XS part

my $cb_table = {
[% FOR i IN pmitems -%]
  '[% i.module %]' => {
[% FOR j IN i.actions -%]
    [% j.action %] => \&[% j.xs_init_cb %],
[% END -%]
  },
[% END -%]
};

sub _get_cb_init_function {
  my ($pkg, $action) = @_;
  my $p = $cb_table->{$pkg};
  my $f = $p->{$action} if $p;
  $f ||= $cb_table->{_dialog}->{$action}   if $pkg =~ /^IUP::(Dialog|ColorDlg|FileDlg|FontDlg|MessageDlg|ProgressDlg)$/;
  $f ||= $cb_table->{_dragdrop}->{$action} if $pkg =~ /^IUP::(Label|AnimatedLabel|Text|MultiLine|List|MatrixList|Tree|Canvas|Matrix|Dialog)$/;
  $f ||= $cb_table->{_canvas}->{$action}   if $pkg =~ /^IUP::(Canvas|CanvasGL|Matrix)$/;
  $f ||= $cb_table->{_base}->{$action};
  return $f;
}

sub _is_cb_valid {
  my ($pkg, $action) = @_;
  return (_get_cb_init_function($pkg, $action)) ? 1 : 0;
}

sub _get_cb_list {
  my $pkg = shift;
  my @list;
  push @list, keys(%{$cb_table->{$pkg}});
  push @list, keys(%{$cb_table->{_dialog}})   if $pkg =~ /^IUP::(Dialog|ColorDlg|FileDlg|FontDlg|MessageDlg|ProgressDlg)$/;
  push @list, keys(%{$cb_table->{_dragdrop}}) if $pkg =~ /^IUP::(Label|Text|List|Tree|Canvas|Matrix|Dialog)$/;
  push @list, keys(%{$cb_table->{_canvas}})   if $pkg =~ /^IUP::(Canvas|CanvasGL|Matrix)$/;
  push @list, keys(%{$cb_table->{_base}});
  return keys %{{ map { $_ => 1 } @list }}; #return just uniq items
}

sub _get_cb_eval_code {
  my $pkg = shift;
  my $rv;
  for (_get_cb_list($pkg)) {
    next if defined  *{"$pkg\::$_"};
    $rv .= "*$pkg\::$_ = sub { return \$_[1] ? \$_[0]->SetCallback('$_', \$_[1]) : \$_[0]->{$_} };\n";
  }
  return $rv;
}

1;

__END__

=head1 NAME

IUP::Internal::Callback - [internal only] DO NOT USE this unless you know what could happen!

=cut
